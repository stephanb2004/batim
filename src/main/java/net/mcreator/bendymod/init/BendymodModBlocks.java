
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.bendymod.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import net.mcreator.bendymod.block.WritingWhosLaughingNowBlock;
import net.mcreator.bendymod.block.WritingTheSheepWillComeToSlaughterBlock;
import net.mcreator.bendymod.block.WritingTheCreatorLiedToUsBlock;
import net.mcreator.bendymod.block.WritingSingWithMeBlock;
import net.mcreator.bendymod.block.WritingItsTimeToBelieveBlock;
import net.mcreator.bendymod.block.WritingDreamsComeTrueBlock;
import net.mcreator.bendymod.block.WritingDownHereWereAllSinnersBlock;
import net.mcreator.bendymod.block.WrenchBlock;
import net.mcreator.bendymod.block.WorkTableBlock;
import net.mcreator.bendymod.block.ViolinBlock;
import net.mcreator.bendymod.block.VentCoverBlock;
import net.mcreator.bendymod.block.ValveBlock;
import net.mcreator.bendymod.block.TrashBinBlock;
import net.mcreator.bendymod.block.ToolboxBlock;
import net.mcreator.bendymod.block.StudioTiledWallBlock;
import net.mcreator.bendymod.block.StudioPlankedWallBrokenBlock;
import net.mcreator.bendymod.block.StudioPlankedWallBlock;
import net.mcreator.bendymod.block.StudioLampBlock;
import net.mcreator.bendymod.block.StudioFloorStairsBlock;
import net.mcreator.bendymod.block.StudioFloorSlabBlock;
import net.mcreator.bendymod.block.StudioFloorFenceBlock;
import net.mcreator.bendymod.block.StudioFloorBlock;
import net.mcreator.bendymod.block.StudioDoorSegmentedBlock;
import net.mcreator.bendymod.block.StudioDoorBasicBlock;
import net.mcreator.bendymod.block.StudioDirtBlock;
import net.mcreator.bendymod.block.StudioChairBlock;
import net.mcreator.bendymod.block.StudioCeilingBlock;
import net.mcreator.bendymod.block.StudioBrokenFloorBlock;
import net.mcreator.bendymod.block.StudioBricksBlock;
import net.mcreator.bendymod.block.StudioBrickStairsBlock;
import net.mcreator.bendymod.block.StudioBrickSlabBlock;
import net.mcreator.bendymod.block.StudioBlankWallStairsBlock;
import net.mcreator.bendymod.block.StudioBlankWallSlabBlock;
import net.mcreator.bendymod.block.StudioBlankWallFenceBlock;
import net.mcreator.bendymod.block.StudioBlankWallBlock;
import net.mcreator.bendymod.block.SpeakerBlock;
import net.mcreator.bendymod.block.SoupCandleBlock;
import net.mcreator.bendymod.block.SignLightBlock;
import net.mcreator.bendymod.block.SignDarkBlock;
import net.mcreator.bendymod.block.ShelfBlock;
import net.mcreator.bendymod.block.SheetHolderBlock;
import net.mcreator.bendymod.block.RitualSummoningBlock;
import net.mcreator.bendymod.block.ReelBlock;
import net.mcreator.bendymod.block.RecordingSignOnBlock;
import net.mcreator.bendymod.block.RecordingSignOffBlock;
import net.mcreator.bendymod.block.RecordBlock;
import net.mcreator.bendymod.block.RandomRoomStructureBlockBlock;
import net.mcreator.bendymod.block.RadioBlock;
import net.mcreator.bendymod.block.PunchInCardBlock;
import net.mcreator.bendymod.block.ProjectorBlock;
import net.mcreator.bendymod.block.PosterTrainTroubleBlock;
import net.mcreator.bendymod.block.PosterSheepSongsBlock;
import net.mcreator.bendymod.block.PosterSentFromAboveBlock;
import net.mcreator.bendymod.block.PosterLittleDevilDarlinBlock;
import net.mcreator.bendymod.block.PosterLargeWorkHardWorkHappyBlock;
import net.mcreator.bendymod.block.PosterLargeTrainTroubleBlock;
import net.mcreator.bendymod.block.PosterLargeSheepSongsBlock;
import net.mcreator.bendymod.block.PosterLargeSentFromAboveBlock;
import net.mcreator.bendymod.block.PosterLargeLittleDevilDarlinBlock;
import net.mcreator.bendymod.block.PosterLargeDontForgetToPunchInBlock;
import net.mcreator.bendymod.block.PosterLargeDeliciousBlock;
import net.mcreator.bendymod.block.PosterLargeDancingDemonBlock;
import net.mcreator.bendymod.block.PosterDontForgetToPunchInBlock;
import net.mcreator.bendymod.block.PosterDeliciousBlock;
import net.mcreator.bendymod.block.PosterDancingDemonBlock;
import net.mcreator.bendymod.block.PlankedTrapdoorBlock;
import net.mcreator.bendymod.block.PipeWallVerticalBlock;
import net.mcreator.bendymod.block.PipeWallHorizontalBlock;
import net.mcreator.bendymod.block.PipeStraightBlock;
import net.mcreator.bendymod.block.PianoBlock;
import net.mcreator.bendymod.block.PedestalBlock;
import net.mcreator.bendymod.block.MusicDepartmentSignBlock;
import net.mcreator.bendymod.block.LeverStudioBlock;
import net.mcreator.bendymod.block.LeverPowerBlock;
import net.mcreator.bendymod.block.LargeBoxBlock;
import net.mcreator.bendymod.block.JumbledPaperBlock;
import net.mcreator.bendymod.block.JDSSignBlock;
import net.mcreator.bendymod.block.InkWellBlock;
import net.mcreator.bendymod.block.InkPuddleWallBlock;
import net.mcreator.bendymod.block.InkPuddleSpawnerBlock;
import net.mcreator.bendymod.block.InkPuddleBlock;
import net.mcreator.bendymod.block.InkMachineBlock;
import net.mcreator.bendymod.block.InkBlock;
import net.mcreator.bendymod.block.InkBarrelBlock;
import net.mcreator.bendymod.block.InfermaryBedBlock;
import net.mcreator.bendymod.block.InactiveRandomRoomStructureBlockBlock;
import net.mcreator.bendymod.block.InactiveHallwaysStructureBlockBlock;
import net.mcreator.bendymod.block.IllusionOfLivingBlock;
import net.mcreator.bendymod.block.HatRackBlock;
import net.mcreator.bendymod.block.HangingMicBlock;
import net.mcreator.bendymod.block.HallwaysStructureBlockBlock;
import net.mcreator.bendymod.block.GearboxBlock;
import net.mcreator.bendymod.block.DrumBlock;
import net.mcreator.bendymod.block.DresserBlock;
import net.mcreator.bendymod.block.DeskFancyBlock;
import net.mcreator.bendymod.block.DeskBlock;
import net.mcreator.bendymod.block.CutoutSinnyBlock;
import net.mcreator.bendymod.block.CutoutBendyBlock;
import net.mcreator.bendymod.block.CurtainRaggetyBlock;
import net.mcreator.bendymod.block.CrateBlock;
import net.mcreator.bendymod.block.CogBlock;
import net.mcreator.bendymod.block.CoffinBlock;
import net.mcreator.bendymod.block.ChainFenceBlock;
import net.mcreator.bendymod.block.Cellbox2Block;
import net.mcreator.bendymod.block.Cellbox1Block;
import net.mcreator.bendymod.block.Cellbox0Block;
import net.mcreator.bendymod.block.CassettePlayerBlock;
import net.mcreator.bendymod.block.BorisCloneBlock;
import net.mcreator.bendymod.block.BoardsBlock;
import net.mcreator.bendymod.block.BendyWallBlock;
import net.mcreator.bendymod.block.BendyStatueBlock;
import net.mcreator.bendymod.block.BendyHeadBlock;
import net.mcreator.bendymod.block.BendyDollBlock;
import net.mcreator.bendymod.block.BassBlock;
import net.mcreator.bendymod.block.BanjoBlock;
import net.mcreator.bendymod.BendymodMod;

public class BendymodModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, BendymodMod.MODID);
	public static final RegistryObject<Block> STUDIO_BLANK_WALL = REGISTRY.register("studio_blank_wall", () -> new StudioBlankWallBlock());
	public static final RegistryObject<Block> STUDIO_BLANK_WALL_STAIRS = REGISTRY.register("studio_blank_wall_stairs", () -> new StudioBlankWallStairsBlock());
	public static final RegistryObject<Block> STUDIO_BLANK_WALL_SLAB = REGISTRY.register("studio_blank_wall_slab", () -> new StudioBlankWallSlabBlock());
	public static final RegistryObject<Block> STUDIO_BLANK_WALL_FENCE = REGISTRY.register("studio_blank_wall_fence", () -> new StudioBlankWallFenceBlock());
	public static final RegistryObject<Block> STUDIO_PLANKED_WALL = REGISTRY.register("studio_planked_wall", () -> new StudioPlankedWallBlock());
	public static final RegistryObject<Block> STUDIO_PLANKED_WALL_BROKEN = REGISTRY.register("studio_planked_wall_broken", () -> new StudioPlankedWallBrokenBlock());
	public static final RegistryObject<Block> STUDIO_TILED_WALL = REGISTRY.register("studio_tiled_wall", () -> new StudioTiledWallBlock());
	public static final RegistryObject<Block> STUDIO_CEILING = REGISTRY.register("studio_ceiling", () -> new StudioCeilingBlock());
	public static final RegistryObject<Block> STUDIO_FLOOR = REGISTRY.register("studio_floor", () -> new StudioFloorBlock());
	public static final RegistryObject<Block> STUDIO_BROKEN_FLOOR = REGISTRY.register("studio_broken_floor", () -> new StudioBrokenFloorBlock());
	public static final RegistryObject<Block> STUDIO_FLOOR_STAIRS = REGISTRY.register("studio_floor_stairs", () -> new StudioFloorStairsBlock());
	public static final RegistryObject<Block> STUDIO_FLOOR_SLAB = REGISTRY.register("studio_floor_slab", () -> new StudioFloorSlabBlock());
	public static final RegistryObject<Block> STUDIO_FLOOR_FENCE = REGISTRY.register("studio_floor_fence", () -> new StudioFloorFenceBlock());
	public static final RegistryObject<Block> STUDIO_BRICKS = REGISTRY.register("studio_bricks", () -> new StudioBricksBlock());
	public static final RegistryObject<Block> STUDIO_BRICK_STAIRS = REGISTRY.register("studio_brick_stairs", () -> new StudioBrickStairsBlock());
	public static final RegistryObject<Block> STUDIO_BRICK_SLAB = REGISTRY.register("studio_brick_slab", () -> new StudioBrickSlabBlock());
	public static final RegistryObject<Block> STUDIO_DIRT = REGISTRY.register("studio_dirt", () -> new StudioDirtBlock());
	public static final RegistryObject<Block> STUDIO_DOOR_BASIC = REGISTRY.register("studio_door_basic", () -> new StudioDoorBasicBlock());
	public static final RegistryObject<Block> STUDIO_DOOR_SEGMENTED = REGISTRY.register("studio_door_segmented", () -> new StudioDoorSegmentedBlock());
	public static final RegistryObject<Block> PLANKED_TRAPDOOR = REGISTRY.register("planked_trapdoor", () -> new PlankedTrapdoorBlock());
	public static final RegistryObject<Block> CHAIN_FENCE = REGISTRY.register("chain_fence", () -> new ChainFenceBlock());
	public static final RegistryObject<Block> HANGING_MIC = REGISTRY.register("hanging_mic", () -> new HangingMicBlock());
	public static final RegistryObject<Block> INK = REGISTRY.register("ink", () -> new InkBlock());
	public static final RegistryObject<Block> CRATE = REGISTRY.register("crate", () -> new CrateBlock());
	public static final RegistryObject<Block> SOUP_CANDLE = REGISTRY.register("soup_candle", () -> new SoupCandleBlock());
	public static final RegistryObject<Block> VENT_COVER = REGISTRY.register("vent_cover", () -> new VentCoverBlock());
	public static final RegistryObject<Block> SIGN_LIGHT = REGISTRY.register("sign_light", () -> new SignLightBlock());
	public static final RegistryObject<Block> SIGN_DARK = REGISTRY.register("sign_dark", () -> new SignDarkBlock());
	public static final RegistryObject<Block> CUTOUT_BENDY = REGISTRY.register("cutout_bendy", () -> new CutoutBendyBlock());
	public static final RegistryObject<Block> PROJECTOR = REGISTRY.register("projector", () -> new ProjectorBlock());
	public static final RegistryObject<Block> DESK = REGISTRY.register("desk", () -> new DeskBlock());
	public static final RegistryObject<Block> DESK_FANCY = REGISTRY.register("desk_fancy", () -> new DeskFancyBlock());
	public static final RegistryObject<Block> WORK_TABLE = REGISTRY.register("work_table", () -> new WorkTableBlock());
	public static final RegistryObject<Block> SHELF = REGISTRY.register("shelf", () -> new ShelfBlock());
	public static final RegistryObject<Block> STUDIO_CHAIR = REGISTRY.register("studio_chair", () -> new StudioChairBlock());
	public static final RegistryObject<Block> DRESSER = REGISTRY.register("dresser", () -> new DresserBlock());
	public static final RegistryObject<Block> INK_BARREL = REGISTRY.register("ink_barrel", () -> new InkBarrelBlock());
	public static final RegistryObject<Block> STUDIO_LAMP = REGISTRY.register("studio_lamp", () -> new StudioLampBlock());
	public static final RegistryObject<Block> TRASH_BIN = REGISTRY.register("trash_bin", () -> new TrashBinBlock());
	public static final RegistryObject<Block> RADIO = REGISTRY.register("radio", () -> new RadioBlock());
	public static final RegistryObject<Block> SPEAKER = REGISTRY.register("speaker", () -> new SpeakerBlock());
	public static final RegistryObject<Block> CASSETTE_PLAYER = REGISTRY.register("cassette_player", () -> new CassettePlayerBlock());
	public static final RegistryObject<Block> LEVER_POWER = REGISTRY.register("lever_power", () -> new LeverPowerBlock());
	public static final RegistryObject<Block> LEVER_STUDIO = REGISTRY.register("lever_studio", () -> new LeverStudioBlock());
	public static final RegistryObject<Block> VALVE = REGISTRY.register("valve", () -> new ValveBlock());
	public static final RegistryObject<Block> LARGE_BOX = REGISTRY.register("large_box", () -> new LargeBoxBlock());
	public static final RegistryObject<Block> INK_PUDDLE = REGISTRY.register("ink_puddle", () -> new InkPuddleBlock());
	public static final RegistryObject<Block> INK_PUDDLE_WALL = REGISTRY.register("ink_puddle_wall", () -> new InkPuddleWallBlock());
	public static final RegistryObject<Block> INK_MACHINE = REGISTRY.register("ink_machine", () -> new InkMachineBlock());
	public static final RegistryObject<Block> JUMBLED_PAPER = REGISTRY.register("jumbled_paper", () -> new JumbledPaperBlock());
	public static final RegistryObject<Block> BOARDS = REGISTRY.register("boards", () -> new BoardsBlock());
	public static final RegistryObject<Block> BORIS_CLONE = REGISTRY.register("boris_clone", () -> new BorisCloneBlock());
	public static final RegistryObject<Block> BENDY_STATUE = REGISTRY.register("bendy_statue", () -> new BendyStatueBlock());
	public static final RegistryObject<Block> COFFIN = REGISTRY.register("coffin", () -> new CoffinBlock());
	public static final RegistryObject<Block> REEL = REGISTRY.register("reel", () -> new ReelBlock());
	public static final RegistryObject<Block> JDS_SIGN = REGISTRY.register("jds_sign", () -> new JDSSignBlock());
	public static final RegistryObject<Block> MUSIC_DEPARTMENT_SIGN = REGISTRY.register("music_department_sign", () -> new MusicDepartmentSignBlock());
	public static final RegistryObject<Block> RECORDING_SIGN_OFF = REGISTRY.register("recording_sign_off", () -> new RecordingSignOffBlock());
	public static final RegistryObject<Block> PIPE_STRAIGHT = REGISTRY.register("pipe_straight", () -> new PipeStraightBlock());
	public static final RegistryObject<Block> PIPE_WALL_VERTICAL = REGISTRY.register("pipe_wall_vertical", () -> new PipeWallVerticalBlock());
	public static final RegistryObject<Block> PIPE_WALL_HORIZONTAL = REGISTRY.register("pipe_wall_horizontal", () -> new PipeWallHorizontalBlock());
	public static final RegistryObject<Block> GEARBOX = REGISTRY.register("gearbox", () -> new GearboxBlock());
	public static final RegistryObject<Block> TOOLBOX = REGISTRY.register("toolbox", () -> new ToolboxBlock());
	public static final RegistryObject<Block> HAT_RACK = REGISTRY.register("hat_rack", () -> new HatRackBlock());
	public static final RegistryObject<Block> PUNCH_IN_CARD = REGISTRY.register("punch_in_card", () -> new PunchInCardBlock());
	public static final RegistryObject<Block> CELLBOX_0 = REGISTRY.register("cellbox_0", () -> new Cellbox0Block());
	public static final RegistryObject<Block> INFERMARY_BED = REGISTRY.register("infermary_bed", () -> new InfermaryBedBlock());
	public static final RegistryObject<Block> PEDESTAL = REGISTRY.register("pedestal", () -> new PedestalBlock());
	public static final RegistryObject<Block> RECORD = REGISTRY.register("record", () -> new RecordBlock());
	public static final RegistryObject<Block> INK_WELL = REGISTRY.register("ink_well", () -> new InkWellBlock());
	public static final RegistryObject<Block> COG = REGISTRY.register("cog", () -> new CogBlock());
	public static final RegistryObject<Block> BENDY_DOLL = REGISTRY.register("bendy_doll", () -> new BendyDollBlock());
	public static final RegistryObject<Block> WRENCH = REGISTRY.register("wrench", () -> new WrenchBlock());
	public static final RegistryObject<Block> ILLUSION_OF_LIVING = REGISTRY.register("illusion_of_living", () -> new IllusionOfLivingBlock());
	public static final RegistryObject<Block> SHEET_HOLDER = REGISTRY.register("sheet_holder", () -> new SheetHolderBlock());
	public static final RegistryObject<Block> BANJO = REGISTRY.register("banjo", () -> new BanjoBlock());
	public static final RegistryObject<Block> DRUM = REGISTRY.register("drum", () -> new DrumBlock());
	public static final RegistryObject<Block> PIANO = REGISTRY.register("piano", () -> new PianoBlock());
	public static final RegistryObject<Block> BASS = REGISTRY.register("bass", () -> new BassBlock());
	public static final RegistryObject<Block> VIOLIN = REGISTRY.register("violin", () -> new ViolinBlock());
	public static final RegistryObject<Block> CURTAIN_RAGGETY = REGISTRY.register("curtain_raggety", () -> new CurtainRaggetyBlock());
	public static final RegistryObject<Block> BENDY_WALL = REGISTRY.register("bendy_wall", () -> new BendyWallBlock());
	public static final RegistryObject<Block> BENDY_HEAD = REGISTRY.register("bendy_head", () -> new BendyHeadBlock());
	public static final RegistryObject<Block> POSTER_LITTLE_DEVIL_DARLIN = REGISTRY.register("poster_little_devil_darlin", () -> new PosterLittleDevilDarlinBlock());
	public static final RegistryObject<Block> POSTER_DANCING_DEMON = REGISTRY.register("poster_dancing_demon", () -> new PosterDancingDemonBlock());
	public static final RegistryObject<Block> POSTER_SHEEP_SONGS = REGISTRY.register("poster_sheep_songs", () -> new PosterSheepSongsBlock());
	public static final RegistryObject<Block> POSTER_DONT_FORGET_TO_PUNCH_IN = REGISTRY.register("poster_dont_forget_to_punch_in", () -> new PosterDontForgetToPunchInBlock());
	public static final RegistryObject<Block> POSTER_DELICIOUS = REGISTRY.register("poster_delicious", () -> new PosterDeliciousBlock());
	public static final RegistryObject<Block> POSTER_TRAIN_TROUBLE = REGISTRY.register("poster_train_trouble", () -> new PosterTrainTroubleBlock());
	public static final RegistryObject<Block> POSTER_SENT_FROM_ABOVE = REGISTRY.register("poster_sent_from_above", () -> new PosterSentFromAboveBlock());
	public static final RegistryObject<Block> POSTER_LARGE_LITTLE_DEVIL_DARLIN = REGISTRY.register("poster_large_little_devil_darlin", () -> new PosterLargeLittleDevilDarlinBlock());
	public static final RegistryObject<Block> POSTER_LARGE_DANCING_DEMON = REGISTRY.register("poster_large_dancing_demon", () -> new PosterLargeDancingDemonBlock());
	public static final RegistryObject<Block> POSTER_LARGE_SHEEP_SONGS = REGISTRY.register("poster_large_sheep_songs", () -> new PosterLargeSheepSongsBlock());
	public static final RegistryObject<Block> POSTER_LARGE_DONT_FORGET_TO_PUNCH_IN = REGISTRY.register("poster_large_dont_forget_to_punch_in", () -> new PosterLargeDontForgetToPunchInBlock());
	public static final RegistryObject<Block> POSTER_LARGE_DELICIOUS = REGISTRY.register("poster_large_delicious", () -> new PosterLargeDeliciousBlock());
	public static final RegistryObject<Block> POSTER_LARGE_WORK_HARD_WORK_HAPPY = REGISTRY.register("poster_large_work_hard_work_happy", () -> new PosterLargeWorkHardWorkHappyBlock());
	public static final RegistryObject<Block> POSTER_LARGE_TRAIN_TROUBLE = REGISTRY.register("poster_large_train_trouble", () -> new PosterLargeTrainTroubleBlock());
	public static final RegistryObject<Block> POSTER_LARGE_SENT_FROM_ABOVE = REGISTRY.register("poster_large_sent_from_above", () -> new PosterLargeSentFromAboveBlock());
	public static final RegistryObject<Block> WRITING_DREAMS_COME_TRUE = REGISTRY.register("writing_dreams_come_true", () -> new WritingDreamsComeTrueBlock());
	public static final RegistryObject<Block> WRITING_WHOS_LAUGHING_NOW = REGISTRY.register("writing_whos_laughing_now", () -> new WritingWhosLaughingNowBlock());
	public static final RegistryObject<Block> WRITING_THE_CREATOR_LIED_TO_US = REGISTRY.register("writing_the_creator_lied_to_us", () -> new WritingTheCreatorLiedToUsBlock());
	public static final RegistryObject<Block> WRITING_ITS_TIME_TO_BELIEVE = REGISTRY.register("writing_its_time_to_believe", () -> new WritingItsTimeToBelieveBlock());
	public static final RegistryObject<Block> WRITING_THE_SHEEP_WILL_COME_TO_SLAUGHTER = REGISTRY.register("writing_the_sheep_will_come_to_slaughter", () -> new WritingTheSheepWillComeToSlaughterBlock());
	public static final RegistryObject<Block> WRITING_SING_WITH_ME = REGISTRY.register("writing_sing_with_me", () -> new WritingSingWithMeBlock());
	public static final RegistryObject<Block> WRITING_DOWN_HERE_WERE_ALL_SINNERS = REGISTRY.register("writing_down_here_were_all_sinners", () -> new WritingDownHereWereAllSinnersBlock());
	public static final RegistryObject<Block> RITUAL_SUMMONING = REGISTRY.register("ritual_summoning", () -> new RitualSummoningBlock());
	public static final RegistryObject<Block> CUTOUT_SINNY = REGISTRY.register("cutout_sinny", () -> new CutoutSinnyBlock());
	public static final RegistryObject<Block> RECORDING_SIGN_ON = REGISTRY.register("recording_sign_on", () -> new RecordingSignOnBlock());
	public static final RegistryObject<Block> CELLBOX_1 = REGISTRY.register("cellbox_1", () -> new Cellbox1Block());
	public static final RegistryObject<Block> CELLBOX_2 = REGISTRY.register("cellbox_2", () -> new Cellbox2Block());
	public static final RegistryObject<Block> HALLWAYS_STRUCTURE_BLOCK = REGISTRY.register("hallways_structure_block", () -> new HallwaysStructureBlockBlock());
	public static final RegistryObject<Block> INACTIVE_HALLWAYS_STRUCTURE_BLOCK = REGISTRY.register("inactive_hallways_structure_block", () -> new InactiveHallwaysStructureBlockBlock());
	public static final RegistryObject<Block> RANDOM_ROOM_STRUCTURE_BLOCK = REGISTRY.register("random_room_structure_block", () -> new RandomRoomStructureBlockBlock());
	public static final RegistryObject<Block> INACTIVE_RANDOM_ROOM_STRUCTURE_BLOCK = REGISTRY.register("inactive_random_room_structure_block", () -> new InactiveRandomRoomStructureBlockBlock());
	public static final RegistryObject<Block> INK_PUDDLE_SPAWNER = REGISTRY.register("ink_puddle_spawner", () -> new InkPuddleSpawnerBlock());
}
